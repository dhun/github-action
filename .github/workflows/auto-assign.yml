# GithubのPRのassignees/reviewersを自動設定するワークフロー
# - PR(Standard/Draft)を作成したとき
#   - assigneesに自分を設定する
# - PR(Standard)を作成したとき、またはPR(Draft)をPR(Standard)へ変更したとき
#   - reviewersに設定ファイルで指定したレビューア(STANDARD_PR_REVIEWERS)を設定する
#   - 重要なファイル(CRITICAL_FILES)が含まれている場合は、責任者(CRITICAL_PR_REVIEWERS)もreviewersに設定する
# - PRをドラフト状態へ戻したとき
#   - レビューアを解除する旨をコメントする
name: Auto assign assignee/reviewers
on:
  pull_request:
    types: [opened, ready_for_review, converted_to_draft]
env:
  CRITICAL_PR_REVIEWERS: "RikiNakayama, Junichi-Hosoya" # 重要なPRのレビューア. 複数指定する場合は半角カンマで区切ってください. メンションを送信するときの「@」を除いた文字列を指定します
  CRITICAL_FILES:
    >- # 重要なPRであるとみなすファイルを指定します. Bash向けの正規表現が使えます
    ^.circleci/
    ^.docker/
    ^.github/
    ^doc/
    ^Makefile
    ^README.md
    ^src/go.mod

jobs:
  auto-assign:
    name: Auto assign
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: List commited files
        id: commited-files
        uses: tj-actions/changed-files@v18.5

      # 設定ファイルのロードと、遅延参照を使ったカスタム環境変数の初期化
      - name: Load config JSON file as environment variables
        uses: rgarcia-phi/json-to-variables@v1.1.0
        with:
          filename: .github/workflows/auto-assign.conf.json
          prefix: CONF
      - name: Setupt custom environment variables
        run: |
          # 開発者毎の設定を遅延解決
          STANDARD_PR_REVIEWERS="${{ env[format('CONF_CONTRIBUTORS_{0}_STANDARD_PR_REVIEWERS', github.actor)] }}"
          echo "STANDARD_PR_REVIEWERS=$STANDARD_PR_REVIEWERS" >> $GITHUB_ENV

          # PRに重要なファイルが含まれているかを判定
          CONTAINS_CRITICAL_FILE="false"
          for COMMITED_FILE in ${{ steps.commited-files.outputs.all_changed_files }}; do
            for CRITICAL_FILE in ${{ env.CRITICAL_FILES }}; do
              if [[ ${COMMITED_FILE} =~ $CRITICAL_FILE ]]; then
                CONTAINS_CRITICAL_FILE="true"
              fi
            done
          done
          echo "CONTAINS_CRITICAL_FILE=$CONTAINS_CRITICAL_FILE" >> $GITHUB_ENV

      - name: Setupt custom environment variables result
        run: |
          echo "STANDARD_PR_REVIEWERS=${{ env.STANDARD_PR_REVIEWERS }}"
          echo "$CONTAINS_CRITICAL_FILE={{ env.CONTAINS_CRITICAL_FILE }}"

      # デバッグコード. もう一回デバッグ方法を調査するのは嫌なのでコメントアウト状態で残す
      # - name: Show environment
      #   run: echo "env=${{ toJSON(env) }}"
      # - name: Show Github context
      #   run: echo "github=${{ toJSON(github) }}"
      # - name: Show variables
      #   run: |
      #     echo "${{ github.event.action }}"
      #     echo "${{ github.event.pull_request.draft }}"
      #     echo "${{ env[format('CONF_CONTRIBUTORS_{0}_STANDARD_PR_REVIEWERS', github.actor)] }}"
      #     echo "${{ env.CONTAINS_CRITICAL_FILE }}"
      #     echo "${{ github.event_name }}"
      #     echo "${{ github.event.pull_request.draft }}"
      #     echo "${{ env.CONTAINS_CRITICAL_FILE }}"
      #     echo "${{ env.CONTAINS_CRITICAL_FILE == 'true' }}"

      # PRを作成したら、自動的に自分が担当者になる
      # - `pull` アクションで実行することができなかった(弊害なし)
      #   - Raise `Use this action in "pull_request" workflow`
      - name: Add actor to assignees
        if: github.event.action == 'opened'
        id: assign-assignees
        uses: hkusu/review-assign-action@v1
        with:
          assignees: ${{ github.actor }}
      - name: Add actor to assignees result
        if: github.event.action == 'opened' && always()
        run: echo '${{ steps.assign-assignees.outputs.result }}'

      # 標準PRを作成またはドラフトPRを標準PRへ変更したら、標準レビューアを割り当てる
      # - `pull` アクションで実行することができなかった(弊害なし)
      #   - Raise `Use this action in "pull_request" workflow`
      - name: Add reviewers to standard PR
        if: github.event.pull_request.draft == false && env.STANDARD_PR_REVIEWERS != ''
        id: assign-standard-reviewers
        uses: hkusu/review-assign-action@v1
        with:
          reviewers: ${{ env.STANDARD_PR_REVIEWERS }}
      - name: Add reviewers to standard PR result
        if: github.event.pull_request.draft == false && env.STANDARD_PR_REVIEWERS != '' && always()
        run: echo '${{ steps.assign-standard-reviewers.outputs.result }}'

      # PRで重要なファイルがコミット対象になった場合は、自動的に責任者をレビューアに設定する
      # - `pull` アクションで実行することができなかった(弊害あり)
      #   - Raise `Use this action in "pull_request" workflow`
      #   - 標準PRを作成後にPush操作で重要なファイルがコミット対象になった場合は、責任者を手動でレビューアに設定しなければならない
      - name: Add reviewers to critical PR
        if: github.event.pull_request.draft == false && env.CONTAINS_CRITICAL_FILE == 'true'
        id: assign-critical-reviewers
        uses: hkusu/review-assign-action@v1
        with:
          reviewers: ${{ env.CRITICAL_PR_REVIEWERS }}
          ready-comment: "<reviewers>\n重大な修正を含んだ可能性があるPRのレビューを @${{ github.actor }} から依頼されました。\n**Merge後の後追いでも構わないので必ずレビューしてください。**"
      - name: Add reviewers to critical PR result
        if: github.event.pull_request.draft == false && env.CONTAINS_CRITICAL_FILE == 'true' && always()
        run: echo '${{ steps.assign-critical-reviewers.outputs.result }}'

      # ドラフトPRへ変更したら、コメントを追加する
      - name: Remove reviewers when to converted to draft
        if: github.event.action == 'converted_to_draft'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '@${{ github.actor }}\nドラフトPRへ変更されました。\nレビューアの混乱を避けるため**未レビューのレビューアを削除してください。**'
            })
